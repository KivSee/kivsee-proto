syntax = "proto3";

package kivsee.proto.render.v1;

import "kivsee/proto/render/v1/functions.proto";

message HSV {
  float hue = 1;
  float sat = 2;
  float val = 3;
}

message ConstColorEffectConfig {
  HSV color = 1;
}

message RainbowEffectConfig {
  FloatFunction hue_start = 1;
  FloatFunction hue_end = 2;
}

message BrightnessEffectConfig {
  FloatFunction mult_factor = 1;
}

message HueEffectConfig {
  FloatFunction offset_factor = 1;
}

message SaturationEffectConfig {
  FloatFunction mult_factor = 1;
}

message SnakeEffectConfig {
  FloatFunction head = 1;
  FloatFunction tail_length = 2;
  bool cyclic = 3;
}

message TimedBrightnessEffectConfig {
  oneof function {
    FloatFunction mult_factor_increase = 1;
    FloatFunction mult_factor_decrease = 2;
  }
}

message TimedHueEffectConfig {
  FloatFunction offset_factor = 1;
}

message TimedSaturationEffectConfig {
  oneof function {
    FloatFunction mult_factor_increase = 1;
    FloatFunction mult_factor_decrease = 2;
  }
}

message PositionBrightnessEffectConfig {
  oneof function {
    FloatFunction mult_factor_increase = 1;
    FloatFunction mult_factor_decrease = 2;
  }
}

message PositionHueEffectConfig {
  FloatFunction offset_factor = 1;
}

message PositionSaturationEffectConfig {
  oneof function {
    FloatFunction mult_factor_increase = 1;
    FloatFunction mult_factor_decrease = 2;
  }
}

message SnakeBrightnessEffectConfig {
  FloatFunction head = 1;
  FloatFunction tail_length = 2;
  bool cyclic = 3;
  uint8 repeat_num = 4;

  oneof function {
    FloatFunction mult_factor_increase = 5;
    FloatFunction mult_factor_decrease = 6;
  }
}

message SnakeHueEffectConfig {
  FloatFunction head = 1;
  FloatFunction tail_length = 2;
  bool cyclic = 3;
  uint8 repeat_num = 4;

  oneof function {
    FloatFunction mult_factor_increase = 5;
    FloatFunction mult_factor_decrease = 6;
  }
}

message SnakeSaturationEffectConfig {
  FloatFunction head = 1;
  FloatFunction tail_length = 2;
  bool cyclic = 3;
  uint8 repeat_num = 4;

  oneof function {
    FloatFunction mult_factor_increase = 5;
    FloatFunction mult_factor_decrease = 6;
  }
}

message EffectConfig {
  uint32 start_time = 1;
  uint32 end_time = 2;
  string segments = 3;

  float repeat_num = 4;
  float repeat_start = 5;
  float repeat_end = 6;
}

message EffectProto {
  EffectConfig effect_config = 1;

  oneof effect {
    ConstColorEffectConfig const_color = 2;
    RainbowEffectConfig rainbow = 3;
    BrightnessEffectConfig brightness = 4;
    HueEffectConfig hue = 5;
    SaturationEffectConfig saturation = 6;
    SnakeEffectConfig snake = 7;
    TimedBrightnessEffectConfig timed_brightness = 8;
    TimedHueEffectConfig timed_hue = 9;
    TimedSaturationEffectConfig timed_saturation = 10;
    PositionBrightnessEffectConfig position_brightness = 11;
    PositionHueEffectConfig position_hue = 12;
    PositionSaturationEffectConfig position_saturation = 13;
    SnakeBrightnessEffectConfig snake_brightness = 14;
    SnakeHueEffectConfig snake_hue = 15;
    SnakeSaturationEffectConfig snake_saturation = 16;
  }
}

message AnimationProto {
  repeated EffectProto effects = 1;
  uint32 duration_ms = 2;
  uint32 num_repeats = 3; // 0 means forever
}
