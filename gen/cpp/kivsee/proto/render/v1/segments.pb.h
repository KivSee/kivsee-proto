// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kivsee/proto/render/v1/segments.proto
// Protobuf C++ Version: 6.31.0

#ifndef kivsee_2fproto_2frender_2fv1_2fsegments_2eproto_2epb_2eh
#define kivsee_2fproto_2frender_2fv1_2fsegments_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto;
}  // extern "C"
namespace kivsee {
namespace proto {
namespace render {
namespace v1 {
class Pixel;
struct PixelDefaultTypeInternal;
extern PixelDefaultTypeInternal _Pixel_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Pixel_class_data_;
class Segment;
struct SegmentDefaultTypeInternal;
extern SegmentDefaultTypeInternal _Segment_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Segment_class_data_;
class ThingSegments;
struct ThingSegmentsDefaultTypeInternal;
extern ThingSegmentsDefaultTypeInternal _ThingSegments_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ThingSegments_class_data_;
}  // namespace v1
}  // namespace render
}  // namespace proto
}  // namespace kivsee
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kivsee {
namespace proto {
namespace render {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Pixel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kivsee.proto.render.v1.Pixel) */ {
 public:
  inline Pixel() : Pixel(nullptr) {}
  ~Pixel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Pixel* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Pixel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pixel(::google::protobuf::internal::ConstantInitialized);

  inline Pixel(const Pixel& from) : Pixel(nullptr, from) {}
  inline Pixel(Pixel&& from) noexcept
      : Pixel(nullptr, ::std::move(from)) {}
  inline Pixel& operator=(const Pixel& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pixel& operator=(Pixel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pixel& default_instance() {
    return *reinterpret_cast<const Pixel*>(
        &_Pixel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Pixel& a, Pixel& b) { a.Swap(&b); }
  inline void Swap(Pixel* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pixel* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pixel* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Pixel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pixel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pixel& from) { Pixel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Pixel* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kivsee.proto.render.v1.Pixel"; }

 protected:
  explicit Pixel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Pixel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Pixel& from);
  Pixel(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Pixel&& from) noexcept
      : Pixel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
    kRelPosFieldNumber = 2,
  };
  // uint32 index = 1 [json_name = "index"];
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // float rel_pos = 2 [json_name = "relPos"];
  void clear_rel_pos() ;
  float rel_pos() const;
  void set_rel_pos(float value);

  private:
  float _internal_rel_pos() const;
  void _internal_set_rel_pos(float value);

  public:
  // @@protoc_insertion_point(class_scope:kivsee.proto.render.v1.Pixel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Pixel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t index_;
    float rel_pos_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Pixel_class_data_;
// -------------------------------------------------------------------

class Segment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kivsee.proto.render.v1.Segment) */ {
 public:
  inline Segment() : Segment(nullptr) {}
  ~Segment() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Segment* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Segment));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Segment(::google::protobuf::internal::ConstantInitialized);

  inline Segment(const Segment& from) : Segment(nullptr, from) {}
  inline Segment(Segment&& from) noexcept
      : Segment(nullptr, ::std::move(from)) {}
  inline Segment& operator=(const Segment& from) {
    CopyFrom(from);
    return *this;
  }
  inline Segment& operator=(Segment&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Segment& default_instance() {
    return *reinterpret_cast<const Segment*>(
        &_Segment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Segment& a, Segment& b) { a.Swap(&b); }
  inline void Swap(Segment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Segment* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Segment* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Segment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Segment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Segment& from) { Segment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Segment* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kivsee.proto.render.v1.Segment"; }

 protected:
  explicit Segment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Segment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Segment& from);
  Segment(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Segment&& from) noexcept
      : Segment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPixelsFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated .kivsee.proto.render.v1.Pixel pixels = 2 [json_name = "pixels"];
  int pixels_size() const;
  private:
  int _internal_pixels_size() const;

  public:
  void clear_pixels() ;
  ::kivsee::proto::render::v1::Pixel* PROTOBUF_NONNULL mutable_pixels(int index);
  ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>* PROTOBUF_NONNULL mutable_pixels();

  private:
  const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>& _internal_pixels() const;
  ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>* PROTOBUF_NONNULL _internal_mutable_pixels();
  public:
  const ::kivsee::proto::render::v1::Pixel& pixels(int index) const;
  ::kivsee::proto::render::v1::Pixel* PROTOBUF_NONNULL add_pixels();
  const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>& pixels() const;
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:kivsee.proto.render.v1.Segment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Segment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kivsee::proto::render::v1::Pixel > pixels_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Segment_class_data_;
// -------------------------------------------------------------------

class ThingSegments final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kivsee.proto.render.v1.ThingSegments) */ {
 public:
  inline ThingSegments() : ThingSegments(nullptr) {}
  ~ThingSegments() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ThingSegments* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ThingSegments));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ThingSegments(::google::protobuf::internal::ConstantInitialized);

  inline ThingSegments(const ThingSegments& from) : ThingSegments(nullptr, from) {}
  inline ThingSegments(ThingSegments&& from) noexcept
      : ThingSegments(nullptr, ::std::move(from)) {}
  inline ThingSegments& operator=(const ThingSegments& from) {
    CopyFrom(from);
    return *this;
  }
  inline ThingSegments& operator=(ThingSegments&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ThingSegments& default_instance() {
    return *reinterpret_cast<const ThingSegments*>(
        &_ThingSegments_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ThingSegments& a, ThingSegments& b) { a.Swap(&b); }
  inline void Swap(ThingSegments* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ThingSegments* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ThingSegments* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ThingSegments>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ThingSegments& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ThingSegments& from) { ThingSegments::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ThingSegments* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kivsee.proto.render.v1.ThingSegments"; }

 protected:
  explicit ThingSegments(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ThingSegments(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ThingSegments& from);
  ThingSegments(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ThingSegments&& from) noexcept
      : ThingSegments(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentsFieldNumber = 3,
    kGuidFieldNumber = 1,
    kNumberOfPixelsFieldNumber = 2,
  };
  // repeated .kivsee.proto.render.v1.Segment segments = 3 [json_name = "segments"];
  int segments_size() const;
  private:
  int _internal_segments_size() const;

  public:
  void clear_segments() ;
  ::kivsee::proto::render::v1::Segment* PROTOBUF_NONNULL mutable_segments(int index);
  ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>* PROTOBUF_NONNULL mutable_segments();

  private:
  const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>& _internal_segments() const;
  ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>* PROTOBUF_NONNULL _internal_mutable_segments();
  public:
  const ::kivsee::proto::render::v1::Segment& segments(int index) const;
  ::kivsee::proto::render::v1::Segment* PROTOBUF_NONNULL add_segments();
  const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>& segments() const;
  // fixed32 guid = 1 [json_name = "guid"];
  void clear_guid() ;
  ::uint32_t guid() const;
  void set_guid(::uint32_t value);

  private:
  ::uint32_t _internal_guid() const;
  void _internal_set_guid(::uint32_t value);

  public:
  // uint32 number_of_pixels = 2 [json_name = "numberOfPixels"];
  void clear_number_of_pixels() ;
  ::uint32_t number_of_pixels() const;
  void set_number_of_pixels(::uint32_t value);

  private:
  ::uint32_t _internal_number_of_pixels() const;
  void _internal_set_number_of_pixels(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kivsee.proto.render.v1.ThingSegments)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ThingSegments& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kivsee::proto::render::v1::Segment > segments_;
    ::uint32_t guid_;
    ::uint32_t number_of_pixels_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ThingSegments_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Pixel

// uint32 index = 1 [json_name = "index"];
inline void Pixel::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Pixel::index() const {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.Pixel.index)
  return _internal_index();
}
inline void Pixel::set_index(::uint32_t value) {
  _internal_set_index(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:kivsee.proto.render.v1.Pixel.index)
}
inline ::uint32_t Pixel::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void Pixel::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// float rel_pos = 2 [json_name = "relPos"];
inline void Pixel::clear_rel_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rel_pos_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Pixel::rel_pos() const {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.Pixel.rel_pos)
  return _internal_rel_pos();
}
inline void Pixel::set_rel_pos(float value) {
  _internal_set_rel_pos(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:kivsee.proto.render.v1.Pixel.rel_pos)
}
inline float Pixel::_internal_rel_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rel_pos_;
}
inline void Pixel::_internal_set_rel_pos(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rel_pos_ = value;
}

// -------------------------------------------------------------------

// Segment

// string name = 1 [json_name = "name"];
inline void Segment::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Segment::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.Segment.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Segment::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kivsee.proto.render.v1.Segment.name)
}
inline ::std::string* PROTOBUF_NONNULL Segment::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kivsee.proto.render.v1.Segment.name)
  return _s;
}
inline const ::std::string& Segment::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Segment::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Segment::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Segment::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kivsee.proto.render.v1.Segment.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Segment::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.Segment.name)
}

// repeated .kivsee.proto.render.v1.Pixel pixels = 2 [json_name = "pixels"];
inline int Segment::_internal_pixels_size() const {
  return _internal_pixels().size();
}
inline int Segment::pixels_size() const {
  return _internal_pixels_size();
}
inline void Segment::clear_pixels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pixels_.Clear();
}
inline ::kivsee::proto::render::v1::Pixel* PROTOBUF_NONNULL Segment::mutable_pixels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kivsee.proto.render.v1.Segment.pixels)
  return _internal_mutable_pixels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>* PROTOBUF_NONNULL Segment::mutable_pixels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kivsee.proto.render.v1.Segment.pixels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pixels();
}
inline const ::kivsee::proto::render::v1::Pixel& Segment::pixels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.Segment.pixels)
  return _internal_pixels().Get(index);
}
inline ::kivsee::proto::render::v1::Pixel* PROTOBUF_NONNULL Segment::add_pixels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kivsee::proto::render::v1::Pixel* _add = _internal_mutable_pixels()->Add();
  // @@protoc_insertion_point(field_add:kivsee.proto.render.v1.Segment.pixels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>& Segment::pixels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kivsee.proto.render.v1.Segment.pixels)
  return _internal_pixels();
}
inline const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>&
Segment::_internal_pixels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pixels_;
}
inline ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Pixel>* PROTOBUF_NONNULL
Segment::_internal_mutable_pixels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pixels_;
}

// -------------------------------------------------------------------

// ThingSegments

// fixed32 guid = 1 [json_name = "guid"];
inline void ThingSegments::clear_guid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t ThingSegments::guid() const {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.ThingSegments.guid)
  return _internal_guid();
}
inline void ThingSegments::set_guid(::uint32_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:kivsee.proto.render.v1.ThingSegments.guid)
}
inline ::uint32_t ThingSegments::_internal_guid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.guid_;
}
inline void ThingSegments::_internal_set_guid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.guid_ = value;
}

// uint32 number_of_pixels = 2 [json_name = "numberOfPixels"];
inline void ThingSegments::clear_number_of_pixels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_pixels_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ThingSegments::number_of_pixels() const {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.ThingSegments.number_of_pixels)
  return _internal_number_of_pixels();
}
inline void ThingSegments::set_number_of_pixels(::uint32_t value) {
  _internal_set_number_of_pixels(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:kivsee.proto.render.v1.ThingSegments.number_of_pixels)
}
inline ::uint32_t ThingSegments::_internal_number_of_pixels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_of_pixels_;
}
inline void ThingSegments::_internal_set_number_of_pixels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_pixels_ = value;
}

// repeated .kivsee.proto.render.v1.Segment segments = 3 [json_name = "segments"];
inline int ThingSegments::_internal_segments_size() const {
  return _internal_segments().size();
}
inline int ThingSegments::segments_size() const {
  return _internal_segments_size();
}
inline void ThingSegments::clear_segments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segments_.Clear();
}
inline ::kivsee::proto::render::v1::Segment* PROTOBUF_NONNULL ThingSegments::mutable_segments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kivsee.proto.render.v1.ThingSegments.segments)
  return _internal_mutable_segments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>* PROTOBUF_NONNULL ThingSegments::mutable_segments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kivsee.proto.render.v1.ThingSegments.segments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_segments();
}
inline const ::kivsee::proto::render::v1::Segment& ThingSegments::segments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kivsee.proto.render.v1.ThingSegments.segments)
  return _internal_segments().Get(index);
}
inline ::kivsee::proto::render::v1::Segment* PROTOBUF_NONNULL ThingSegments::add_segments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kivsee::proto::render::v1::Segment* _add = _internal_mutable_segments()->Add();
  // @@protoc_insertion_point(field_add:kivsee.proto.render.v1.ThingSegments.segments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>& ThingSegments::segments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kivsee.proto.render.v1.ThingSegments.segments)
  return _internal_segments();
}
inline const ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>&
ThingSegments::_internal_segments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segments_;
}
inline ::google::protobuf::RepeatedPtrField<::kivsee::proto::render::v1::Segment>* PROTOBUF_NONNULL
ThingSegments::_internal_mutable_segments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.segments_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace render
}  // namespace proto
}  // namespace kivsee


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kivsee_2fproto_2frender_2fv1_2fsegments_2eproto_2epb_2eh
