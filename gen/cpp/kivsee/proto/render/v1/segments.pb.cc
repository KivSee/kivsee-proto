// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kivsee/proto/render/v1/segments.proto
// Protobuf C++ Version: 6.31.0

#include "kivsee/proto/render/v1/segments.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kivsee {
namespace proto {
namespace render {
namespace v1 {

inline constexpr Pixel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        index_{0u},
        rel_pos_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pixel::Pixel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Pixel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PixelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PixelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PixelDefaultTypeInternal() {}
  union {
    Pixel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PixelDefaultTypeInternal _Pixel_default_instance_;

inline constexpr Segment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pixels_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Segment::Segment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Segment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SegmentDefaultTypeInternal() {}
  union {
    Segment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SegmentDefaultTypeInternal _Segment_default_instance_;

inline constexpr ThingSegments::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        segments_{},
        guid_{0u},
        number_of_pixels_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ThingSegments::ThingSegments(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ThingSegments_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ThingSegmentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThingSegmentsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThingSegmentsDefaultTypeInternal() {}
  union {
    ThingSegments _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThingSegmentsDefaultTypeInternal _ThingSegments_default_instance_;
}  // namespace v1
}  // namespace render
}  // namespace proto
}  // namespace kivsee
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto = nullptr;
const ::uint32_t
    TableStruct_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Pixel, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Pixel, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Pixel, _impl_.rel_pos_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Segment, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Segment, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Segment, _impl_.pixels_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::ThingSegments, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::ThingSegments, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::ThingSegments, _impl_.number_of_pixels_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::ThingSegments, _impl_.segments_),
        0,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::kivsee::proto::render::v1::Pixel)},
        {7, sizeof(::kivsee::proto::render::v1::Segment)},
        {14, sizeof(::kivsee::proto::render::v1::ThingSegments)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::kivsee::proto::render::v1::_Pixel_default_instance_._instance,
    &::kivsee::proto::render::v1::_Segment_default_instance_._instance,
    &::kivsee::proto::render::v1::_ThingSegments_default_instance_._instance,
};
const char descriptor_table_protodef_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%kivsee/proto/render/v1/segments.proto\022"
    "\026kivsee.proto.render.v1\"6\n\005Pixel\022\024\n\005inde"
    "x\030\001 \001(\rR\005index\022\027\n\007rel_pos\030\002 \001(\002R\006relPos\""
    "T\n\007Segment\022\022\n\004name\030\001 \001(\tR\004name\0225\n\006pixels"
    "\030\002 \003(\0132\035.kivsee.proto.render.v1.PixelR\006p"
    "ixels\"\212\001\n\rThingSegments\022\022\n\004guid\030\001 \001(\007R\004g"
    "uid\022(\n\020number_of_pixels\030\002 \001(\rR\016numberOfP"
    "ixels\022;\n\010segments\030\003 \003(\0132\037.kivsee.proto.r"
    "ender.v1.SegmentR\010segmentsb\006proto3"
};
static ::absl::once_flag descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto = {
    false,
    false,
    354,
    descriptor_table_protodef_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto,
    "kivsee/proto/render/v1/segments.proto",
    &descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto::offsets,
    file_level_enum_descriptors_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto,
    file_level_service_descriptors_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto,
};
namespace kivsee {
namespace proto {
namespace render {
namespace v1 {
// ===================================================================

class Pixel::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Pixel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Pixel, _impl_._has_bits_);
};

Pixel::Pixel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Pixel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.Pixel)
}
Pixel::Pixel(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Pixel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Pixel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Pixel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Pixel::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, rel_pos_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::rel_pos_));
}
Pixel::~Pixel() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.Pixel)
  SharedDtor(*this);
}
inline void Pixel::SharedDtor(MessageLite& self) {
  Pixel& this_ = static_cast<Pixel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Pixel::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Pixel(arena);
}
constexpr auto Pixel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Pixel),
                                            alignof(Pixel));
}
constexpr auto Pixel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Pixel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Pixel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Pixel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Pixel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Pixel>(), &Pixel::ByteSizeLong,
              &Pixel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Pixel, _impl_._cached_size_),
          false,
      },
      &Pixel::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Pixel_class_data_ =
        Pixel::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Pixel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Pixel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Pixel_class_data_.tc_table);
  return Pixel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Pixel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Pixel, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Pixel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::Pixel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float rel_pos = 2 [json_name = "relPos"];
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Pixel, _impl_.rel_pos_)}},
    // uint32 index = 1 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pixel, _impl_.index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Pixel, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 index = 1 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(Pixel, _impl_.index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // float rel_pos = 2 [json_name = "relPos"];
    {PROTOBUF_FIELD_OFFSET(Pixel, _impl_.rel_pos_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Pixel::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.Pixel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rel_pos_) -
        reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.rel_pos_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Pixel::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Pixel& this_ = static_cast<const Pixel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Pixel::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Pixel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.Pixel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 index = 1 [json_name = "index"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_index() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_index(), target);
    }
  }

  // float rel_pos = 2 [json_name = "relPos"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_rel_pos()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_rel_pos(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.Pixel)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Pixel::ByteSizeLong(const MessageLite& base) {
  const Pixel& this_ = static_cast<const Pixel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Pixel::ByteSizeLong() const {
  const Pixel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.Pixel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 index = 1 [json_name = "index"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_index() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_index());
      }
    }
    // float rel_pos = 2 [json_name = "relPos"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_rel_pos()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Pixel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pixel*>(&to_msg);
  auto& from = static_cast<const Pixel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.Pixel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_index() != 0) {
        _this->_impl_.index_ = from._impl_.index_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_rel_pos()) != 0) {
        _this->_impl_.rel_pos_ = from._impl_.rel_pos_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pixel::CopyFrom(const Pixel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.Pixel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pixel::InternalSwap(Pixel* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pixel, _impl_.rel_pos_)
      + sizeof(Pixel::_impl_.rel_pos_)
      - PROTOBUF_FIELD_OFFSET(Pixel, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata Pixel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Segment::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Segment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Segment, _impl_._has_bits_);
};

Segment::Segment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Segment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.Segment)
}
PROTOBUF_NDEBUG_INLINE Segment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::kivsee::proto::render::v1::Segment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pixels_{visibility, arena, from.pixels_},
        name_(arena, from.name_) {}

Segment::Segment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Segment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Segment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Segment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kivsee.proto.render.v1.Segment)
}
PROTOBUF_NDEBUG_INLINE Segment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        pixels_{visibility, arena},
        name_(arena) {}

inline void Segment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Segment::~Segment() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.Segment)
  SharedDtor(*this);
}
inline void Segment::SharedDtor(MessageLite& self) {
  Segment& this_ = static_cast<Segment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Segment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Segment(arena);
}
constexpr auto Segment::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Segment, _impl_.pixels_) +
          decltype(Segment::_impl_.pixels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Segment), alignof(Segment), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Segment::PlacementNew_,
                                 sizeof(Segment),
                                 alignof(Segment));
  }
}
constexpr auto Segment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Segment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Segment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Segment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Segment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Segment>(), &Segment::ByteSizeLong,
              &Segment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Segment, _impl_._cached_size_),
          false,
      },
      &Segment::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Segment_class_data_ =
        Segment::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Segment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Segment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Segment_class_data_.tc_table);
  return Segment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 43, 2>
Segment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Segment, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Segment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::Segment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kivsee.proto.render.v1.Pixel pixels = 2 [json_name = "pixels"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Segment, _impl_.pixels_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Segment, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Segment, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kivsee.proto.render.v1.Pixel pixels = 2 [json_name = "pixels"];
    {PROTOBUF_FIELD_OFFSET(Segment, _impl_.pixels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::Pixel>()},
  }},
  {{
    "\36\4\0\0\0\0\0\0"
    "kivsee.proto.render.v1.Segment"
    "name"
  }},
};
PROTOBUF_NOINLINE void Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.Segment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pixels_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Segment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Segment& this_ = static_cast<const Segment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Segment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Segment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.Segment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kivsee.proto.render.v1.Segment.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .kivsee.proto.render.v1.Pixel pixels = 2 [json_name = "pixels"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_pixels_size());
       i < n; i++) {
    const auto& repfield = this_._internal_pixels().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.Segment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Segment::ByteSizeLong(const MessageLite& base) {
  const Segment& this_ = static_cast<const Segment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Segment::ByteSizeLong() const {
  const Segment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.Segment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .kivsee.proto.render.v1.Pixel pixels = 2 [json_name = "pixels"];
    {
      total_size += 1UL * this_._internal_pixels_size();
      for (const auto& msg : this_._internal_pixels()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // string name = 1 [json_name = "name"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Segment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Segment*>(&to_msg);
  auto& from = static_cast<const Segment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.Segment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pixels()->MergeFrom(
      from._internal_pixels());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_name().empty()) {
      _this->_internal_set_name(from._internal_name());
    } else {
      if (_this->_impl_.name_.IsDefault()) {
        _this->_internal_set_name("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Segment::CopyFrom(const Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Segment::InternalSwap(Segment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pixels_.InternalSwap(&other->_impl_.pixels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata Segment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ThingSegments::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ThingSegments>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_._has_bits_);
};

ThingSegments::ThingSegments(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ThingSegments_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.ThingSegments)
}
PROTOBUF_NDEBUG_INLINE ThingSegments::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::kivsee::proto::render::v1::ThingSegments& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        segments_{visibility, arena, from.segments_} {}

ThingSegments::ThingSegments(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ThingSegments& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ThingSegments_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ThingSegments* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, number_of_pixels_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::number_of_pixels_));

  // @@protoc_insertion_point(copy_constructor:kivsee.proto.render.v1.ThingSegments)
}
PROTOBUF_NDEBUG_INLINE ThingSegments::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        segments_{visibility, arena} {}

inline void ThingSegments::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, number_of_pixels_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::number_of_pixels_));
}
ThingSegments::~ThingSegments() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.ThingSegments)
  SharedDtor(*this);
}
inline void ThingSegments::SharedDtor(MessageLite& self) {
  ThingSegments& this_ = static_cast<ThingSegments&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ThingSegments::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ThingSegments(arena);
}
constexpr auto ThingSegments::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.segments_) +
          decltype(ThingSegments::_impl_.segments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ThingSegments), alignof(ThingSegments), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ThingSegments::PlacementNew_,
                                 sizeof(ThingSegments),
                                 alignof(ThingSegments));
  }
}
constexpr auto ThingSegments::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ThingSegments_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ThingSegments::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ThingSegments>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ThingSegments::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ThingSegments>(), &ThingSegments::ByteSizeLong,
              &ThingSegments::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_._cached_size_),
          false,
      },
      &ThingSegments::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ThingSegments_class_data_ =
        ThingSegments::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ThingSegments::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ThingSegments_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ThingSegments_class_data_.tc_table);
  return ThingSegments_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
ThingSegments::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ThingSegments_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::ThingSegments>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // fixed32 guid = 1 [json_name = "guid"];
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.guid_)}},
    // uint32 number_of_pixels = 2 [json_name = "numberOfPixels"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ThingSegments, _impl_.number_of_pixels_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.number_of_pixels_)}},
    // repeated .kivsee.proto.render.v1.Segment segments = 3 [json_name = "segments"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.segments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // fixed32 guid = 1 [json_name = "guid"];
    {PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // uint32 number_of_pixels = 2 [json_name = "numberOfPixels"];
    {PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.number_of_pixels_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .kivsee.proto.render.v1.Segment segments = 3 [json_name = "segments"];
    {PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.segments_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::Segment>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ThingSegments::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.ThingSegments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segments_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.number_of_pixels_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.number_of_pixels_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ThingSegments::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ThingSegments& this_ = static_cast<const ThingSegments&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ThingSegments::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ThingSegments& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.ThingSegments)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // fixed32 guid = 1 [json_name = "guid"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_guid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
          1, this_._internal_guid(), target);
    }
  }

  // uint32 number_of_pixels = 2 [json_name = "numberOfPixels"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_number_of_pixels() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_number_of_pixels(), target);
    }
  }

  // repeated .kivsee.proto.render.v1.Segment segments = 3 [json_name = "segments"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_segments_size());
       i < n; i++) {
    const auto& repfield = this_._internal_segments().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.ThingSegments)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ThingSegments::ByteSizeLong(const MessageLite& base) {
  const ThingSegments& this_ = static_cast<const ThingSegments&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ThingSegments::ByteSizeLong() const {
  const ThingSegments& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.ThingSegments)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .kivsee.proto.render.v1.Segment segments = 3 [json_name = "segments"];
    {
      total_size += 1UL * this_._internal_segments_size();
      for (const auto& msg : this_._internal_segments()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // fixed32 guid = 1 [json_name = "guid"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_guid() != 0) {
        total_size += 5;
      }
    }
    // uint32 number_of_pixels = 2 [json_name = "numberOfPixels"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_number_of_pixels() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_number_of_pixels());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ThingSegments::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ThingSegments*>(&to_msg);
  auto& from = static_cast<const ThingSegments&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.ThingSegments)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_segments()->MergeFrom(
      from._internal_segments());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_guid() != 0) {
        _this->_impl_.guid_ = from._impl_.guid_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_number_of_pixels() != 0) {
        _this->_impl_.number_of_pixels_ = from._impl_.number_of_pixels_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ThingSegments::CopyFrom(const ThingSegments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.ThingSegments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ThingSegments::InternalSwap(ThingSegments* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.segments_.InternalSwap(&other->_impl_.segments_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.number_of_pixels_)
      + sizeof(ThingSegments::_impl_.number_of_pixels_)
      - PROTOBUF_FIELD_OFFSET(ThingSegments, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata ThingSegments::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace render
}  // namespace proto
}  // namespace kivsee
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_kivsee_2fproto_2frender_2fv1_2fsegments_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
