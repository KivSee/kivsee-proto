// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kivsee/proto/render/v1/functions.proto
// Protobuf C++ Version: 6.31.0

#include "kivsee/proto/render/v1/functions.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kivsee {
namespace proto {
namespace render {
namespace v1 {

inline constexpr StepsFloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        num_steps_{0},
        diff_per_step_{0},
        first_step_value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StepsFloatFunctionConfig::StepsFloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StepsFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StepsFloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepsFloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepsFloatFunctionConfigDefaultTypeInternal() {}
  union {
    StepsFloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepsFloatFunctionConfigDefaultTypeInternal _StepsFloatFunctionConfig_default_instance_;

inline constexpr SinFloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_{0},
        max_{0},
        phase_{0},
        repeats_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SinFloatFunctionConfig::SinFloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SinFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SinFloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SinFloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SinFloatFunctionConfigDefaultTypeInternal() {}
  union {
    SinFloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SinFloatFunctionConfigDefaultTypeInternal _SinFloatFunctionConfig_default_instance_;

inline constexpr LinearFloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_{0},
        end_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LinearFloatFunctionConfig::LinearFloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LinearFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LinearFloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LinearFloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LinearFloatFunctionConfigDefaultTypeInternal() {}
  union {
    LinearFloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LinearFloatFunctionConfigDefaultTypeInternal _LinearFloatFunctionConfig_default_instance_;

inline constexpr ConstValueFloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConstValueFloatFunctionConfig::ConstValueFloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConstValueFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConstValueFloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstValueFloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstValueFloatFunctionConfigDefaultTypeInternal() {}
  union {
    ConstValueFloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstValueFloatFunctionConfigDefaultTypeInternal _ConstValueFloatFunctionConfig_default_instance_;

inline constexpr Comb2FloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f1_{nullptr},
        f2_{nullptr},
        amount1_{0},
        amount2_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Comb2FloatFunctionConfig::Comb2FloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Comb2FloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Comb2FloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Comb2FloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Comb2FloatFunctionConfigDefaultTypeInternal() {}
  union {
    Comb2FloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Comb2FloatFunctionConfigDefaultTypeInternal _Comb2FloatFunctionConfig_default_instance_;

inline constexpr FloatFunction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : function_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FloatFunction::FloatFunction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FloatFunction_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FloatFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FloatFunctionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FloatFunctionDefaultTypeInternal() {}
  union {
    FloatFunction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FloatFunctionDefaultTypeInternal _FloatFunction_default_instance_;

inline constexpr HalfFloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f1_{nullptr},
        f2_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HalfFloatFunctionConfig::HalfFloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HalfFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HalfFloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HalfFloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HalfFloatFunctionConfigDefaultTypeInternal() {}
  union {
    HalfFloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HalfFloatFunctionConfigDefaultTypeInternal _HalfFloatFunctionConfig_default_instance_;

inline constexpr RepeatFloatFunctionConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        functorepeat_{nullptr},
        numberoftimes_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RepeatFloatFunctionConfig::RepeatFloatFunctionConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RepeatFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RepeatFloatFunctionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepeatFloatFunctionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepeatFloatFunctionConfigDefaultTypeInternal() {}
  union {
    RepeatFloatFunctionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepeatFloatFunctionConfigDefaultTypeInternal _RepeatFloatFunctionConfig_default_instance_;
}  // namespace v1
}  // namespace render
}  // namespace proto
}  // namespace kivsee
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto = nullptr;
const ::uint32_t
    TableStruct_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::ConstValueFloatFunctionConfig, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::ConstValueFloatFunctionConfig, _impl_.value_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::LinearFloatFunctionConfig, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::LinearFloatFunctionConfig, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::LinearFloatFunctionConfig, _impl_.end_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::SinFloatFunctionConfig, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::SinFloatFunctionConfig, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::SinFloatFunctionConfig, _impl_.max_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::SinFloatFunctionConfig, _impl_.phase_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::SinFloatFunctionConfig, _impl_.repeats_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::StepsFloatFunctionConfig, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::StepsFloatFunctionConfig, _impl_.num_steps_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::StepsFloatFunctionConfig, _impl_.diff_per_step_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::StepsFloatFunctionConfig, _impl_.first_step_value_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::RepeatFloatFunctionConfig, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::RepeatFloatFunctionConfig, _impl_.numberoftimes_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::RepeatFloatFunctionConfig, _impl_.functorepeat_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::HalfFloatFunctionConfig, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::HalfFloatFunctionConfig, _impl_.f1_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::HalfFloatFunctionConfig, _impl_.f2_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Comb2FloatFunctionConfig, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Comb2FloatFunctionConfig, _impl_.f1_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Comb2FloatFunctionConfig, _impl_.amount1_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Comb2FloatFunctionConfig, _impl_.f2_),
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::Comb2FloatFunctionConfig, _impl_.amount2_),
        0,
        2,
        1,
        3,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::FloatFunction, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::FloatFunction, _impl_.function_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::kivsee::proto::render::v1::ConstValueFloatFunctionConfig)},
        {5, sizeof(::kivsee::proto::render::v1::LinearFloatFunctionConfig)},
        {12, sizeof(::kivsee::proto::render::v1::SinFloatFunctionConfig)},
        {23, sizeof(::kivsee::proto::render::v1::StepsFloatFunctionConfig)},
        {32, sizeof(::kivsee::proto::render::v1::RepeatFloatFunctionConfig)},
        {39, sizeof(::kivsee::proto::render::v1::HalfFloatFunctionConfig)},
        {46, sizeof(::kivsee::proto::render::v1::Comb2FloatFunctionConfig)},
        {57, sizeof(::kivsee::proto::render::v1::FloatFunction)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::kivsee::proto::render::v1::_ConstValueFloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_LinearFloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_SinFloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_StepsFloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_RepeatFloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_HalfFloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_Comb2FloatFunctionConfig_default_instance_._instance,
    &::kivsee::proto::render::v1::_FloatFunction_default_instance_._instance,
};
const char descriptor_table_protodef_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&kivsee/proto/render/v1/functions.proto"
    "\022\026kivsee.proto.render.v1\"5\n\035ConstValueFl"
    "oatFunctionConfig\022\024\n\005value\030\001 \001(\002R\005value\""
    "C\n\031LinearFloatFunctionConfig\022\024\n\005start\030\001 "
    "\001(\002R\005start\022\020\n\003end\030\002 \001(\002R\003end\"l\n\026SinFloat"
    "FunctionConfig\022\020\n\003min\030\001 \001(\002R\003min\022\020\n\003max\030"
    "\002 \001(\002R\003max\022\024\n\005phase\030\003 \001(\002R\005phase\022\030\n\007repe"
    "ats\030\004 \001(\002R\007repeats\"\205\001\n\030StepsFloatFunctio"
    "nConfig\022\033\n\tnum_steps\030\001 \001(\002R\010numSteps\022\"\n\r"
    "diff_per_step\030\002 \001(\002R\013diffPerStep\022(\n\020firs"
    "t_step_value\030\003 \001(\002R\016firstStepValue\"\214\001\n\031R"
    "epeatFloatFunctionConfig\022$\n\rnumberOfTime"
    "s\030\001 \001(\002R\rnumberOfTimes\022I\n\014funcToRepeat\030\002"
    " \001(\0132%.kivsee.proto.render.v1.FloatFunct"
    "ionR\014funcToRepeat\"\207\001\n\027HalfFloatFunctionC"
    "onfig\0225\n\002f1\030\001 \001(\0132%.kivsee.proto.render."
    "v1.FloatFunctionR\002f1\0225\n\002f2\030\002 \001(\0132%.kivse"
    "e.proto.render.v1.FloatFunctionR\002f2\"\274\001\n\030"
    "Comb2FloatFunctionConfig\0225\n\002f1\030\001 \001(\0132%.k"
    "ivsee.proto.render.v1.FloatFunctionR\002f1\022"
    "\030\n\007amount1\030\002 \001(\002R\007amount1\0225\n\002f2\030\003 \001(\0132%."
    "kivsee.proto.render.v1.FloatFunctionR\002f2"
    "\022\030\n\007amount2\030\004 \001(\002R\007amount2\"\256\004\n\rFloatFunc"
    "tion\022X\n\013const_value\030\001 \001(\01325.kivsee.proto"
    ".render.v1.ConstValueFloatFunctionConfig"
    "H\000R\nconstValue\022K\n\006linear\030\002 \001(\01321.kivsee."
    "proto.render.v1.LinearFloatFunctionConfi"
    "gH\000R\006linear\022B\n\003sin\030\003 \001(\0132..kivsee.proto."
    "render.v1.SinFloatFunctionConfigH\000R\003sin\022"
    "H\n\005steps\030\004 \001(\01320.kivsee.proto.render.v1."
    "StepsFloatFunctionConfigH\000R\005steps\022K\n\006rep"
    "eat\030\005 \001(\01321.kivsee.proto.render.v1.Repea"
    "tFloatFunctionConfigH\000R\006repeat\022E\n\004half\030\006"
    " \001(\0132/.kivsee.proto.render.v1.HalfFloatF"
    "unctionConfigH\000R\004half\022H\n\005comb2\030\007 \001(\01320.k"
    "ivsee.proto.render.v1.Comb2FloatFunction"
    "ConfigH\000R\005comb2B\n\n\010functionb\006proto3"
};
static ::absl::once_flag descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto = {
    false,
    false,
    1475,
    descriptor_table_protodef_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
    "kivsee/proto/render/v1/functions.proto",
    &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto::offsets,
    file_level_enum_descriptors_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
    file_level_service_descriptors_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
};
namespace kivsee {
namespace proto {
namespace render {
namespace v1 {
// ===================================================================

class ConstValueFloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConstValueFloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConstValueFloatFunctionConfig, _impl_._has_bits_);
};

ConstValueFloatFunctionConfig::ConstValueFloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConstValueFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
}
ConstValueFloatFunctionConfig::ConstValueFloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConstValueFloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConstValueFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ConstValueFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ConstValueFloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
ConstValueFloatFunctionConfig::~ConstValueFloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  SharedDtor(*this);
}
inline void ConstValueFloatFunctionConfig::SharedDtor(MessageLite& self) {
  ConstValueFloatFunctionConfig& this_ = static_cast<ConstValueFloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConstValueFloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConstValueFloatFunctionConfig(arena);
}
constexpr auto ConstValueFloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ConstValueFloatFunctionConfig),
                                            alignof(ConstValueFloatFunctionConfig));
}
constexpr auto ConstValueFloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConstValueFloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConstValueFloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConstValueFloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConstValueFloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConstValueFloatFunctionConfig>(), &ConstValueFloatFunctionConfig::ByteSizeLong,
              &ConstValueFloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConstValueFloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &ConstValueFloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConstValueFloatFunctionConfig_class_data_ =
        ConstValueFloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConstValueFloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConstValueFloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConstValueFloatFunctionConfig_class_data_.tc_table);
  return ConstValueFloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ConstValueFloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConstValueFloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConstValueFloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::ConstValueFloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float value = 1 [json_name = "value"];
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(ConstValueFloatFunctionConfig, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConstValueFloatFunctionConfig, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ConstValueFloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConstValueFloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConstValueFloatFunctionConfig& this_ = static_cast<const ConstValueFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConstValueFloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConstValueFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConstValueFloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const ConstValueFloatFunctionConfig& this_ = static_cast<const ConstValueFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConstValueFloatFunctionConfig::ByteSizeLong() const {
  const ConstValueFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // float value = 1 [json_name = "value"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_value()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConstValueFloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConstValueFloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const ConstValueFloatFunctionConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(from._internal_value()) != 0) {
      _this->_impl_.value_ = from._impl_.value_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConstValueFloatFunctionConfig::CopyFrom(const ConstValueFloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.ConstValueFloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConstValueFloatFunctionConfig::InternalSwap(ConstValueFloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata ConstValueFloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LinearFloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LinearFloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_._has_bits_);
};

LinearFloatFunctionConfig::LinearFloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LinearFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.LinearFloatFunctionConfig)
}
LinearFloatFunctionConfig::LinearFloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LinearFloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LinearFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LinearFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LinearFloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_),
           0,
           offsetof(Impl_, end_) -
               offsetof(Impl_, start_) +
               sizeof(Impl_::end_));
}
LinearFloatFunctionConfig::~LinearFloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  SharedDtor(*this);
}
inline void LinearFloatFunctionConfig::SharedDtor(MessageLite& self) {
  LinearFloatFunctionConfig& this_ = static_cast<LinearFloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LinearFloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LinearFloatFunctionConfig(arena);
}
constexpr auto LinearFloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LinearFloatFunctionConfig),
                                            alignof(LinearFloatFunctionConfig));
}
constexpr auto LinearFloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LinearFloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LinearFloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LinearFloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LinearFloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LinearFloatFunctionConfig>(), &LinearFloatFunctionConfig::ByteSizeLong,
              &LinearFloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &LinearFloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LinearFloatFunctionConfig_class_data_ =
        LinearFloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LinearFloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LinearFloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LinearFloatFunctionConfig_class_data_.tc_table);
  return LinearFloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
LinearFloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LinearFloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::LinearFloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float end = 2 [json_name = "end"];
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_.end_)}},
    // float start = 1 [json_name = "start"];
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_.start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float start = 1 [json_name = "start"];
    {PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_.start_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float end = 2 [json_name = "end"];
    {PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_.end_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LinearFloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.start_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_) -
        reinterpret_cast<char*>(&_impl_.start_)) + sizeof(_impl_.end_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LinearFloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LinearFloatFunctionConfig& this_ = static_cast<const LinearFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LinearFloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LinearFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float start = 1 [json_name = "start"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_start()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_start(), target);
    }
  }

  // float end = 2 [json_name = "end"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_end()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_end(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LinearFloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const LinearFloatFunctionConfig& this_ = static_cast<const LinearFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LinearFloatFunctionConfig::ByteSizeLong() const {
  const LinearFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // float start = 1 [json_name = "start"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_start()) != 0) {
        total_size += 5;
      }
    }
    // float end = 2 [json_name = "end"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_end()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LinearFloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LinearFloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const LinearFloatFunctionConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_start()) != 0) {
        _this->_impl_.start_ = from._impl_.start_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_end()) != 0) {
        _this->_impl_.end_ = from._impl_.end_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LinearFloatFunctionConfig::CopyFrom(const LinearFloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.LinearFloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LinearFloatFunctionConfig::InternalSwap(LinearFloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_.end_)
      + sizeof(LinearFloatFunctionConfig::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(LinearFloatFunctionConfig, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata LinearFloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SinFloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SinFloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_._has_bits_);
};

SinFloatFunctionConfig::SinFloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SinFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.SinFloatFunctionConfig)
}
SinFloatFunctionConfig::SinFloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SinFloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SinFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SinFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SinFloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, repeats_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::repeats_));
}
SinFloatFunctionConfig::~SinFloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.SinFloatFunctionConfig)
  SharedDtor(*this);
}
inline void SinFloatFunctionConfig::SharedDtor(MessageLite& self) {
  SinFloatFunctionConfig& this_ = static_cast<SinFloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SinFloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SinFloatFunctionConfig(arena);
}
constexpr auto SinFloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SinFloatFunctionConfig),
                                            alignof(SinFloatFunctionConfig));
}
constexpr auto SinFloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SinFloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SinFloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SinFloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SinFloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SinFloatFunctionConfig>(), &SinFloatFunctionConfig::ByteSizeLong,
              &SinFloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &SinFloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SinFloatFunctionConfig_class_data_ =
        SinFloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SinFloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SinFloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SinFloatFunctionConfig_class_data_.tc_table);
  return SinFloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
SinFloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SinFloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::SinFloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float repeats = 4 [json_name = "repeats"];
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.repeats_)}},
    // float min = 1 [json_name = "min"];
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.min_)}},
    // float max = 2 [json_name = "max"];
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.max_)}},
    // float phase = 3 [json_name = "phase"];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.phase_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float min = 1 [json_name = "min"];
    {PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.min_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float max = 2 [json_name = "max"];
    {PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.max_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float phase = 3 [json_name = "phase"];
    {PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.phase_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float repeats = 4 [json_name = "repeats"];
    {PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.repeats_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SinFloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.SinFloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.min_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.repeats_) -
        reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.repeats_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SinFloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SinFloatFunctionConfig& this_ = static_cast<const SinFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SinFloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SinFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.SinFloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float min = 1 [json_name = "min"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_min()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_min(), target);
    }
  }

  // float max = 2 [json_name = "max"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_max()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_max(), target);
    }
  }

  // float phase = 3 [json_name = "phase"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_phase()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_phase(), target);
    }
  }

  // float repeats = 4 [json_name = "repeats"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_repeats()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_repeats(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.SinFloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SinFloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const SinFloatFunctionConfig& this_ = static_cast<const SinFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SinFloatFunctionConfig::ByteSizeLong() const {
  const SinFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.SinFloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // float min = 1 [json_name = "min"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_min()) != 0) {
        total_size += 5;
      }
    }
    // float max = 2 [json_name = "max"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_max()) != 0) {
        total_size += 5;
      }
    }
    // float phase = 3 [json_name = "phase"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_phase()) != 0) {
        total_size += 5;
      }
    }
    // float repeats = 4 [json_name = "repeats"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_repeats()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SinFloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SinFloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const SinFloatFunctionConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.SinFloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_min()) != 0) {
        _this->_impl_.min_ = from._impl_.min_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_max()) != 0) {
        _this->_impl_.max_ = from._impl_.max_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_phase()) != 0) {
        _this->_impl_.phase_ = from._impl_.phase_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_repeats()) != 0) {
        _this->_impl_.repeats_ = from._impl_.repeats_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SinFloatFunctionConfig::CopyFrom(const SinFloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.SinFloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SinFloatFunctionConfig::InternalSwap(SinFloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.repeats_)
      + sizeof(SinFloatFunctionConfig::_impl_.repeats_)
      - PROTOBUF_FIELD_OFFSET(SinFloatFunctionConfig, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata SinFloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StepsFloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StepsFloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_._has_bits_);
};

StepsFloatFunctionConfig::StepsFloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StepsFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.StepsFloatFunctionConfig)
}
StepsFloatFunctionConfig::StepsFloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StepsFloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StepsFloatFunctionConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE StepsFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void StepsFloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_steps_),
           0,
           offsetof(Impl_, first_step_value_) -
               offsetof(Impl_, num_steps_) +
               sizeof(Impl_::first_step_value_));
}
StepsFloatFunctionConfig::~StepsFloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  SharedDtor(*this);
}
inline void StepsFloatFunctionConfig::SharedDtor(MessageLite& self) {
  StepsFloatFunctionConfig& this_ = static_cast<StepsFloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StepsFloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StepsFloatFunctionConfig(arena);
}
constexpr auto StepsFloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StepsFloatFunctionConfig),
                                            alignof(StepsFloatFunctionConfig));
}
constexpr auto StepsFloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StepsFloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StepsFloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StepsFloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StepsFloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StepsFloatFunctionConfig>(), &StepsFloatFunctionConfig::ByteSizeLong,
              &StepsFloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &StepsFloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StepsFloatFunctionConfig_class_data_ =
        StepsFloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StepsFloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StepsFloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StepsFloatFunctionConfig_class_data_.tc_table);
  return StepsFloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
StepsFloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StepsFloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::StepsFloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float num_steps = 1 [json_name = "numSteps"];
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.num_steps_)}},
    // float diff_per_step = 2 [json_name = "diffPerStep"];
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.diff_per_step_)}},
    // float first_step_value = 3 [json_name = "firstStepValue"];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.first_step_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float num_steps = 1 [json_name = "numSteps"];
    {PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.num_steps_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float diff_per_step = 2 [json_name = "diffPerStep"];
    {PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.diff_per_step_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float first_step_value = 3 [json_name = "firstStepValue"];
    {PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.first_step_value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void StepsFloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.num_steps_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.first_step_value_) -
        reinterpret_cast<char*>(&_impl_.num_steps_)) + sizeof(_impl_.first_step_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StepsFloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StepsFloatFunctionConfig& this_ = static_cast<const StepsFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StepsFloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StepsFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float num_steps = 1 [json_name = "numSteps"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_num_steps()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_num_steps(), target);
    }
  }

  // float diff_per_step = 2 [json_name = "diffPerStep"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_diff_per_step()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_diff_per_step(), target);
    }
  }

  // float first_step_value = 3 [json_name = "firstStepValue"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_first_step_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_first_step_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StepsFloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const StepsFloatFunctionConfig& this_ = static_cast<const StepsFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StepsFloatFunctionConfig::ByteSizeLong() const {
  const StepsFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // float num_steps = 1 [json_name = "numSteps"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_num_steps()) != 0) {
        total_size += 5;
      }
    }
    // float diff_per_step = 2 [json_name = "diffPerStep"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_diff_per_step()) != 0) {
        total_size += 5;
      }
    }
    // float first_step_value = 3 [json_name = "firstStepValue"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_first_step_value()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StepsFloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StepsFloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const StepsFloatFunctionConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_num_steps()) != 0) {
        _this->_impl_.num_steps_ = from._impl_.num_steps_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_diff_per_step()) != 0) {
        _this->_impl_.diff_per_step_ = from._impl_.diff_per_step_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_first_step_value()) != 0) {
        _this->_impl_.first_step_value_ = from._impl_.first_step_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StepsFloatFunctionConfig::CopyFrom(const StepsFloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.StepsFloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StepsFloatFunctionConfig::InternalSwap(StepsFloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.first_step_value_)
      + sizeof(StepsFloatFunctionConfig::_impl_.first_step_value_)
      - PROTOBUF_FIELD_OFFSET(StepsFloatFunctionConfig, _impl_.num_steps_)>(
          reinterpret_cast<char*>(&_impl_.num_steps_),
          reinterpret_cast<char*>(&other->_impl_.num_steps_));
}

::google::protobuf::Metadata StepsFloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RepeatFloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RepeatFloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_._has_bits_);
};

RepeatFloatFunctionConfig::RepeatFloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RepeatFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
}
PROTOBUF_NDEBUG_INLINE RepeatFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::kivsee::proto::render::v1::RepeatFloatFunctionConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RepeatFloatFunctionConfig::RepeatFloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RepeatFloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RepeatFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RepeatFloatFunctionConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.functorepeat_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.functorepeat_)
                : nullptr;
  _impl_.numberoftimes_ = from._impl_.numberoftimes_;

  // @@protoc_insertion_point(copy_constructor:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
}
PROTOBUF_NDEBUG_INLINE RepeatFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RepeatFloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, functorepeat_),
           0,
           offsetof(Impl_, numberoftimes_) -
               offsetof(Impl_, functorepeat_) +
               sizeof(Impl_::numberoftimes_));
}
RepeatFloatFunctionConfig::~RepeatFloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  SharedDtor(*this);
}
inline void RepeatFloatFunctionConfig::SharedDtor(MessageLite& self) {
  RepeatFloatFunctionConfig& this_ = static_cast<RepeatFloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.functorepeat_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RepeatFloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RepeatFloatFunctionConfig(arena);
}
constexpr auto RepeatFloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RepeatFloatFunctionConfig),
                                            alignof(RepeatFloatFunctionConfig));
}
constexpr auto RepeatFloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RepeatFloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RepeatFloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RepeatFloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RepeatFloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RepeatFloatFunctionConfig>(), &RepeatFloatFunctionConfig::ByteSizeLong,
              &RepeatFloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &RepeatFloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RepeatFloatFunctionConfig_class_data_ =
        RepeatFloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RepeatFloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RepeatFloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RepeatFloatFunctionConfig_class_data_.tc_table);
  return RepeatFloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
RepeatFloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RepeatFloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::RepeatFloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kivsee.proto.render.v1.FloatFunction funcToRepeat = 2 [json_name = "funcToRepeat"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_.functorepeat_)}},
    // float numberOfTimes = 1 [json_name = "numberOfTimes"];
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_.numberoftimes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float numberOfTimes = 1 [json_name = "numberOfTimes"];
    {PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_.numberoftimes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .kivsee.proto.render.v1.FloatFunction funcToRepeat = 2 [json_name = "funcToRepeat"];
    {PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_.functorepeat_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::FloatFunction>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RepeatFloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.functorepeat_ != nullptr);
    _impl_.functorepeat_->Clear();
  }
  _impl_.numberoftimes_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RepeatFloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RepeatFloatFunctionConfig& this_ = static_cast<const RepeatFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RepeatFloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RepeatFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float numberOfTimes = 1 [json_name = "numberOfTimes"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_numberoftimes()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_numberoftimes(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .kivsee.proto.render.v1.FloatFunction funcToRepeat = 2 [json_name = "funcToRepeat"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.functorepeat_, this_._impl_.functorepeat_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RepeatFloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const RepeatFloatFunctionConfig& this_ = static_cast<const RepeatFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RepeatFloatFunctionConfig::ByteSizeLong() const {
  const RepeatFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .kivsee.proto.render.v1.FloatFunction funcToRepeat = 2 [json_name = "funcToRepeat"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.functorepeat_);
    }
    // float numberOfTimes = 1 [json_name = "numberOfTimes"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_numberoftimes()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RepeatFloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RepeatFloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const RepeatFloatFunctionConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.functorepeat_ != nullptr);
      if (_this->_impl_.functorepeat_ == nullptr) {
        _this->_impl_.functorepeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.functorepeat_);
      } else {
        _this->_impl_.functorepeat_->MergeFrom(*from._impl_.functorepeat_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_numberoftimes()) != 0) {
        _this->_impl_.numberoftimes_ = from._impl_.numberoftimes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RepeatFloatFunctionConfig::CopyFrom(const RepeatFloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.RepeatFloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RepeatFloatFunctionConfig::InternalSwap(RepeatFloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_.numberoftimes_)
      + sizeof(RepeatFloatFunctionConfig::_impl_.numberoftimes_)
      - PROTOBUF_FIELD_OFFSET(RepeatFloatFunctionConfig, _impl_.functorepeat_)>(
          reinterpret_cast<char*>(&_impl_.functorepeat_),
          reinterpret_cast<char*>(&other->_impl_.functorepeat_));
}

::google::protobuf::Metadata RepeatFloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HalfFloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HalfFloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_._has_bits_);
};

HalfFloatFunctionConfig::HalfFloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HalfFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.HalfFloatFunctionConfig)
}
PROTOBUF_NDEBUG_INLINE HalfFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::kivsee::proto::render::v1::HalfFloatFunctionConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HalfFloatFunctionConfig::HalfFloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HalfFloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HalfFloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HalfFloatFunctionConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f1_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f1_)
                : nullptr;
  _impl_.f2_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f2_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:kivsee.proto.render.v1.HalfFloatFunctionConfig)
}
PROTOBUF_NDEBUG_INLINE HalfFloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HalfFloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f1_),
           0,
           offsetof(Impl_, f2_) -
               offsetof(Impl_, f1_) +
               sizeof(Impl_::f2_));
}
HalfFloatFunctionConfig::~HalfFloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  SharedDtor(*this);
}
inline void HalfFloatFunctionConfig::SharedDtor(MessageLite& self) {
  HalfFloatFunctionConfig& this_ = static_cast<HalfFloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.f1_;
  delete this_._impl_.f2_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HalfFloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HalfFloatFunctionConfig(arena);
}
constexpr auto HalfFloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HalfFloatFunctionConfig),
                                            alignof(HalfFloatFunctionConfig));
}
constexpr auto HalfFloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HalfFloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HalfFloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HalfFloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HalfFloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HalfFloatFunctionConfig>(), &HalfFloatFunctionConfig::ByteSizeLong,
              &HalfFloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &HalfFloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HalfFloatFunctionConfig_class_data_ =
        HalfFloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HalfFloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HalfFloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HalfFloatFunctionConfig_class_data_.tc_table);
  return HalfFloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
HalfFloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HalfFloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::HalfFloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kivsee.proto.render.v1.FloatFunction f2 = 2 [json_name = "f2"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_.f2_)}},
    // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_.f1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
    {PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_.f1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.FloatFunction f2 = 2 [json_name = "f2"];
    {PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_.f2_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::FloatFunction>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::FloatFunction>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HalfFloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.f1_ != nullptr);
      _impl_.f1_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.f2_ != nullptr);
      _impl_.f2_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HalfFloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HalfFloatFunctionConfig& this_ = static_cast<const HalfFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HalfFloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HalfFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.f1_, this_._impl_.f1_->GetCachedSize(), target,
        stream);
  }

  // .kivsee.proto.render.v1.FloatFunction f2 = 2 [json_name = "f2"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.f2_, this_._impl_.f2_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HalfFloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const HalfFloatFunctionConfig& this_ = static_cast<const HalfFloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HalfFloatFunctionConfig::ByteSizeLong() const {
  const HalfFloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.f1_);
    }
    // .kivsee.proto.render.v1.FloatFunction f2 = 2 [json_name = "f2"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.f2_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HalfFloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HalfFloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const HalfFloatFunctionConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.f1_ != nullptr);
      if (_this->_impl_.f1_ == nullptr) {
        _this->_impl_.f1_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f1_);
      } else {
        _this->_impl_.f1_->MergeFrom(*from._impl_.f1_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.f2_ != nullptr);
      if (_this->_impl_.f2_ == nullptr) {
        _this->_impl_.f2_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f2_);
      } else {
        _this->_impl_.f2_->MergeFrom(*from._impl_.f2_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HalfFloatFunctionConfig::CopyFrom(const HalfFloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.HalfFloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HalfFloatFunctionConfig::InternalSwap(HalfFloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_.f2_)
      + sizeof(HalfFloatFunctionConfig::_impl_.f2_)
      - PROTOBUF_FIELD_OFFSET(HalfFloatFunctionConfig, _impl_.f1_)>(
          reinterpret_cast<char*>(&_impl_.f1_),
          reinterpret_cast<char*>(&other->_impl_.f1_));
}

::google::protobuf::Metadata HalfFloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Comb2FloatFunctionConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Comb2FloatFunctionConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_._has_bits_);
};

Comb2FloatFunctionConfig::Comb2FloatFunctionConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Comb2FloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
}
PROTOBUF_NDEBUG_INLINE Comb2FloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::kivsee::proto::render::v1::Comb2FloatFunctionConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Comb2FloatFunctionConfig::Comb2FloatFunctionConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Comb2FloatFunctionConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Comb2FloatFunctionConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Comb2FloatFunctionConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f1_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f1_)
                : nullptr;
  _impl_.f2_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f2_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, amount1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, amount1_),
           offsetof(Impl_, amount2_) -
               offsetof(Impl_, amount1_) +
               sizeof(Impl_::amount2_));

  // @@protoc_insertion_point(copy_constructor:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
}
PROTOBUF_NDEBUG_INLINE Comb2FloatFunctionConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Comb2FloatFunctionConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f1_),
           0,
           offsetof(Impl_, amount2_) -
               offsetof(Impl_, f1_) +
               sizeof(Impl_::amount2_));
}
Comb2FloatFunctionConfig::~Comb2FloatFunctionConfig() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  SharedDtor(*this);
}
inline void Comb2FloatFunctionConfig::SharedDtor(MessageLite& self) {
  Comb2FloatFunctionConfig& this_ = static_cast<Comb2FloatFunctionConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.f1_;
  delete this_._impl_.f2_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Comb2FloatFunctionConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Comb2FloatFunctionConfig(arena);
}
constexpr auto Comb2FloatFunctionConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Comb2FloatFunctionConfig),
                                            alignof(Comb2FloatFunctionConfig));
}
constexpr auto Comb2FloatFunctionConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Comb2FloatFunctionConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Comb2FloatFunctionConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Comb2FloatFunctionConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Comb2FloatFunctionConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Comb2FloatFunctionConfig>(), &Comb2FloatFunctionConfig::ByteSizeLong,
              &Comb2FloatFunctionConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_._cached_size_),
          false,
      },
      &Comb2FloatFunctionConfig::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Comb2FloatFunctionConfig_class_data_ =
        Comb2FloatFunctionConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Comb2FloatFunctionConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Comb2FloatFunctionConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Comb2FloatFunctionConfig_class_data_.tc_table);
  return Comb2FloatFunctionConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
Comb2FloatFunctionConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Comb2FloatFunctionConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::Comb2FloatFunctionConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float amount2 = 4 [json_name = "amount2"];
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.amount2_)}},
    // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.f1_)}},
    // float amount1 = 2 [json_name = "amount1"];
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.amount1_)}},
    // .kivsee.proto.render.v1.FloatFunction f2 = 3 [json_name = "f2"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.f2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
    {PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.f1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float amount1 = 2 [json_name = "amount1"];
    {PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.amount1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // .kivsee.proto.render.v1.FloatFunction f2 = 3 [json_name = "f2"];
    {PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.f2_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float amount2 = 4 [json_name = "amount2"];
    {PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.amount2_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::FloatFunction>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::FloatFunction>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Comb2FloatFunctionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.f1_ != nullptr);
      _impl_.f1_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.f2_ != nullptr);
      _impl_.f2_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.amount1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.amount2_) -
        reinterpret_cast<char*>(&_impl_.amount1_)) + sizeof(_impl_.amount2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Comb2FloatFunctionConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Comb2FloatFunctionConfig& this_ = static_cast<const Comb2FloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Comb2FloatFunctionConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Comb2FloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.f1_, this_._impl_.f1_->GetCachedSize(), target,
        stream);
  }

  // float amount1 = 2 [json_name = "amount1"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_amount1()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_amount1(), target);
    }
  }

  // .kivsee.proto.render.v1.FloatFunction f2 = 3 [json_name = "f2"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.f2_, this_._impl_.f2_->GetCachedSize(), target,
        stream);
  }

  // float amount2 = 4 [json_name = "amount2"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_amount2()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_amount2(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Comb2FloatFunctionConfig::ByteSizeLong(const MessageLite& base) {
  const Comb2FloatFunctionConfig& this_ = static_cast<const Comb2FloatFunctionConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Comb2FloatFunctionConfig::ByteSizeLong() const {
  const Comb2FloatFunctionConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .kivsee.proto.render.v1.FloatFunction f1 = 1 [json_name = "f1"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.f1_);
    }
    // .kivsee.proto.render.v1.FloatFunction f2 = 3 [json_name = "f2"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.f2_);
    }
    // float amount1 = 2 [json_name = "amount1"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_amount1()) != 0) {
        total_size += 5;
      }
    }
    // float amount2 = 4 [json_name = "amount2"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_amount2()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Comb2FloatFunctionConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Comb2FloatFunctionConfig*>(&to_msg);
  auto& from = static_cast<const Comb2FloatFunctionConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.f1_ != nullptr);
      if (_this->_impl_.f1_ == nullptr) {
        _this->_impl_.f1_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f1_);
      } else {
        _this->_impl_.f1_->MergeFrom(*from._impl_.f1_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.f2_ != nullptr);
      if (_this->_impl_.f2_ == nullptr) {
        _this->_impl_.f2_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.f2_);
      } else {
        _this->_impl_.f2_->MergeFrom(*from._impl_.f2_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_amount1()) != 0) {
        _this->_impl_.amount1_ = from._impl_.amount1_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_amount2()) != 0) {
        _this->_impl_.amount2_ = from._impl_.amount2_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Comb2FloatFunctionConfig::CopyFrom(const Comb2FloatFunctionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.Comb2FloatFunctionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Comb2FloatFunctionConfig::InternalSwap(Comb2FloatFunctionConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.amount2_)
      + sizeof(Comb2FloatFunctionConfig::_impl_.amount2_)
      - PROTOBUF_FIELD_OFFSET(Comb2FloatFunctionConfig, _impl_.f1_)>(
          reinterpret_cast<char*>(&_impl_.f1_),
          reinterpret_cast<char*>(&other->_impl_.f1_));
}

::google::protobuf::Metadata Comb2FloatFunctionConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FloatFunction::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::kivsee::proto::render::v1::FloatFunction, _impl_._oneof_case_);
};

void FloatFunction::set_allocated_const_value(::kivsee::proto::render::v1::ConstValueFloatFunctionConfig* PROTOBUF_NULLABLE const_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (const_value) {
    ::google::protobuf::Arena* submessage_arena = const_value->GetArena();
    if (message_arena != submessage_arena) {
      const_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, const_value, submessage_arena);
    }
    set_has_const_value();
    _impl_.function_.const_value_ = const_value;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.const_value)
}
void FloatFunction::set_allocated_linear(::kivsee::proto::render::v1::LinearFloatFunctionConfig* PROTOBUF_NULLABLE linear) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (linear) {
    ::google::protobuf::Arena* submessage_arena = linear->GetArena();
    if (message_arena != submessage_arena) {
      linear = ::google::protobuf::internal::GetOwnedMessage(message_arena, linear, submessage_arena);
    }
    set_has_linear();
    _impl_.function_.linear_ = linear;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.linear)
}
void FloatFunction::set_allocated_sin(::kivsee::proto::render::v1::SinFloatFunctionConfig* PROTOBUF_NULLABLE sin) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (sin) {
    ::google::protobuf::Arena* submessage_arena = sin->GetArena();
    if (message_arena != submessage_arena) {
      sin = ::google::protobuf::internal::GetOwnedMessage(message_arena, sin, submessage_arena);
    }
    set_has_sin();
    _impl_.function_.sin_ = sin;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.sin)
}
void FloatFunction::set_allocated_steps(::kivsee::proto::render::v1::StepsFloatFunctionConfig* PROTOBUF_NULLABLE steps) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (steps) {
    ::google::protobuf::Arena* submessage_arena = steps->GetArena();
    if (message_arena != submessage_arena) {
      steps = ::google::protobuf::internal::GetOwnedMessage(message_arena, steps, submessage_arena);
    }
    set_has_steps();
    _impl_.function_.steps_ = steps;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.steps)
}
void FloatFunction::set_allocated_repeat(::kivsee::proto::render::v1::RepeatFloatFunctionConfig* PROTOBUF_NULLABLE repeat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (repeat) {
    ::google::protobuf::Arena* submessage_arena = repeat->GetArena();
    if (message_arena != submessage_arena) {
      repeat = ::google::protobuf::internal::GetOwnedMessage(message_arena, repeat, submessage_arena);
    }
    set_has_repeat();
    _impl_.function_.repeat_ = repeat;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.repeat)
}
void FloatFunction::set_allocated_half(::kivsee::proto::render::v1::HalfFloatFunctionConfig* PROTOBUF_NULLABLE half) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (half) {
    ::google::protobuf::Arena* submessage_arena = half->GetArena();
    if (message_arena != submessage_arena) {
      half = ::google::protobuf::internal::GetOwnedMessage(message_arena, half, submessage_arena);
    }
    set_has_half();
    _impl_.function_.half_ = half;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.half)
}
void FloatFunction::set_allocated_comb2(::kivsee::proto::render::v1::Comb2FloatFunctionConfig* PROTOBUF_NULLABLE comb2) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_function();
  if (comb2) {
    ::google::protobuf::Arena* submessage_arena = comb2->GetArena();
    if (message_arena != submessage_arena) {
      comb2 = ::google::protobuf::internal::GetOwnedMessage(message_arena, comb2, submessage_arena);
    }
    set_has_comb2();
    _impl_.function_.comb2_ = comb2;
  }
  // @@protoc_insertion_point(field_set_allocated:kivsee.proto.render.v1.FloatFunction.comb2)
}
FloatFunction::FloatFunction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FloatFunction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kivsee.proto.render.v1.FloatFunction)
}
PROTOBUF_NDEBUG_INLINE FloatFunction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::kivsee::proto::render::v1::FloatFunction& from_msg)
      : function_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

FloatFunction::FloatFunction(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FloatFunction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FloatFunction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FloatFunction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (function_case()) {
    case FUNCTION_NOT_SET:
      break;
      case kConstValue:
        _impl_.function_.const_value_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.const_value_);
        break;
      case kLinear:
        _impl_.function_.linear_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.linear_);
        break;
      case kSin:
        _impl_.function_.sin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.sin_);
        break;
      case kSteps:
        _impl_.function_.steps_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.steps_);
        break;
      case kRepeat:
        _impl_.function_.repeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.repeat_);
        break;
      case kHalf:
        _impl_.function_.half_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.half_);
        break;
      case kComb2:
        _impl_.function_.comb2_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.comb2_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:kivsee.proto.render.v1.FloatFunction)
}
PROTOBUF_NDEBUG_INLINE FloatFunction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : function_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void FloatFunction::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FloatFunction::~FloatFunction() {
  // @@protoc_insertion_point(destructor:kivsee.proto.render.v1.FloatFunction)
  SharedDtor(*this);
}
inline void FloatFunction::SharedDtor(MessageLite& self) {
  FloatFunction& this_ = static_cast<FloatFunction&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_function()) {
    this_.clear_function();
  }
  this_._impl_.~Impl_();
}

void FloatFunction::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:kivsee.proto.render.v1.FloatFunction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (function_case()) {
    case kConstValue: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.const_value_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.const_value_);
      }
      break;
    }
    case kLinear: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.linear_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.linear_);
      }
      break;
    }
    case kSin: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.sin_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.sin_);
      }
      break;
    }
    case kSteps: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.steps_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.steps_);
      }
      break;
    }
    case kRepeat: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.repeat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.repeat_);
      }
      break;
    }
    case kHalf: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.half_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.half_);
      }
      break;
    }
    case kComb2: {
      if (GetArena() == nullptr) {
        delete _impl_.function_.comb2_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.function_.comb2_);
      }
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FUNCTION_NOT_SET;
}


inline void* PROTOBUF_NONNULL FloatFunction::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FloatFunction(arena);
}
constexpr auto FloatFunction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FloatFunction),
                                            alignof(FloatFunction));
}
constexpr auto FloatFunction::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FloatFunction_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FloatFunction::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FloatFunction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FloatFunction::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FloatFunction>(), &FloatFunction::ByteSizeLong,
              &FloatFunction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_._cached_size_),
          false,
      },
      &FloatFunction::kDescriptorMethods,
      &descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FloatFunction_class_data_ =
        FloatFunction::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FloatFunction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FloatFunction_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FloatFunction_class_data_.tc_table);
  return FloatFunction_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 7, 0, 2>
FloatFunction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FloatFunction_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::FloatFunction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .kivsee.proto.render.v1.ConstValueFloatFunctionConfig const_value = 1 [json_name = "constValue"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.const_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.LinearFloatFunctionConfig linear = 2 [json_name = "linear"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.linear_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.SinFloatFunctionConfig sin = 3 [json_name = "sin"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.sin_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.StepsFloatFunctionConfig steps = 4 [json_name = "steps"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.steps_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.RepeatFloatFunctionConfig repeat = 5 [json_name = "repeat"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.repeat_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.HalfFloatFunctionConfig half = 6 [json_name = "half"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.half_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kivsee.proto.render.v1.Comb2FloatFunctionConfig comb2 = 7 [json_name = "comb2"];
    {PROTOBUF_FIELD_OFFSET(FloatFunction, _impl_.function_.comb2_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::ConstValueFloatFunctionConfig>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::LinearFloatFunctionConfig>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::SinFloatFunctionConfig>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::StepsFloatFunctionConfig>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::RepeatFloatFunctionConfig>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::HalfFloatFunctionConfig>()},
      {::_pbi::TcParser::GetTable<::kivsee::proto::render::v1::Comb2FloatFunctionConfig>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FloatFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:kivsee.proto.render.v1.FloatFunction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_function();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FloatFunction::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FloatFunction& this_ = static_cast<const FloatFunction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FloatFunction::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FloatFunction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:kivsee.proto.render.v1.FloatFunction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.function_case()) {
    case kConstValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.function_.const_value_, this_._impl_.function_.const_value_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLinear: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.function_.linear_, this_._impl_.function_.linear_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSin: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.function_.sin_, this_._impl_.function_.sin_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSteps: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.function_.steps_, this_._impl_.function_.steps_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRepeat: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.function_.repeat_, this_._impl_.function_.repeat_->GetCachedSize(), target,
          stream);
      break;
    }
    case kHalf: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.function_.half_, this_._impl_.function_.half_->GetCachedSize(), target,
          stream);
      break;
    }
    case kComb2: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.function_.comb2_, this_._impl_.function_.comb2_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kivsee.proto.render.v1.FloatFunction)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FloatFunction::ByteSizeLong(const MessageLite& base) {
  const FloatFunction& this_ = static_cast<const FloatFunction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FloatFunction::ByteSizeLong() const {
  const FloatFunction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:kivsee.proto.render.v1.FloatFunction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.function_case()) {
    // .kivsee.proto.render.v1.ConstValueFloatFunctionConfig const_value = 1 [json_name = "constValue"];
    case kConstValue: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.const_value_);
      break;
    }
    // .kivsee.proto.render.v1.LinearFloatFunctionConfig linear = 2 [json_name = "linear"];
    case kLinear: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.linear_);
      break;
    }
    // .kivsee.proto.render.v1.SinFloatFunctionConfig sin = 3 [json_name = "sin"];
    case kSin: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.sin_);
      break;
    }
    // .kivsee.proto.render.v1.StepsFloatFunctionConfig steps = 4 [json_name = "steps"];
    case kSteps: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.steps_);
      break;
    }
    // .kivsee.proto.render.v1.RepeatFloatFunctionConfig repeat = 5 [json_name = "repeat"];
    case kRepeat: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.repeat_);
      break;
    }
    // .kivsee.proto.render.v1.HalfFloatFunctionConfig half = 6 [json_name = "half"];
    case kHalf: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.half_);
      break;
    }
    // .kivsee.proto.render.v1.Comb2FloatFunctionConfig comb2 = 7 [json_name = "comb2"];
    case kComb2: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.function_.comb2_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FloatFunction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FloatFunction*>(&to_msg);
  auto& from = static_cast<const FloatFunction&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kivsee.proto.render.v1.FloatFunction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_function();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConstValue: {
        if (oneof_needs_init) {
          _this->_impl_.function_.const_value_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.const_value_);
        } else {
          _this->_impl_.function_.const_value_->MergeFrom(*from._impl_.function_.const_value_);
        }
        break;
      }
      case kLinear: {
        if (oneof_needs_init) {
          _this->_impl_.function_.linear_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.linear_);
        } else {
          _this->_impl_.function_.linear_->MergeFrom(*from._impl_.function_.linear_);
        }
        break;
      }
      case kSin: {
        if (oneof_needs_init) {
          _this->_impl_.function_.sin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.sin_);
        } else {
          _this->_impl_.function_.sin_->MergeFrom(*from._impl_.function_.sin_);
        }
        break;
      }
      case kSteps: {
        if (oneof_needs_init) {
          _this->_impl_.function_.steps_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.steps_);
        } else {
          _this->_impl_.function_.steps_->MergeFrom(*from._impl_.function_.steps_);
        }
        break;
      }
      case kRepeat: {
        if (oneof_needs_init) {
          _this->_impl_.function_.repeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.repeat_);
        } else {
          _this->_impl_.function_.repeat_->MergeFrom(*from._impl_.function_.repeat_);
        }
        break;
      }
      case kHalf: {
        if (oneof_needs_init) {
          _this->_impl_.function_.half_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.half_);
        } else {
          _this->_impl_.function_.half_->MergeFrom(*from._impl_.function_.half_);
        }
        break;
      }
      case kComb2: {
        if (oneof_needs_init) {
          _this->_impl_.function_.comb2_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.function_.comb2_);
        } else {
          _this->_impl_.function_.comb2_->MergeFrom(*from._impl_.function_.comb2_);
        }
        break;
      }
      case FUNCTION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FloatFunction::CopyFrom(const FloatFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kivsee.proto.render.v1.FloatFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FloatFunction::InternalSwap(FloatFunction* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.function_, other->_impl_.function_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata FloatFunction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace render
}  // namespace proto
}  // namespace kivsee
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_kivsee_2fproto_2frender_2fv1_2ffunctions_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
